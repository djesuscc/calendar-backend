{"version":3,"sources":["helpers/fetch.js","types/types.js","helpers/preparerEvents.js","actions/events.js","actions/auth.js","hooks/useForm.js","components/auth/Login.js","components/ui/Navbar.js","helpers/calendar-messages.js","components/calendar/CalendarEvent.js","actions/ui.js","components/calendar/CalendarModal.js","components/ui/AddNewFab.js","components/ui/DeleteEventFab.js","components/calendar/CalendarScreen.js","routers/PrivateRoutes.js","routers/PublicRoutes.js","routers/AppRouter.js","reducers/authReducer.js","reducers/calendarReducer.js","reducers/uiReducer.js","reducers/rootReducers.js","store/store.js","CalendarApp.js","index.js"],"names":["baseUrl","process","fetchNoToken","path","data","method","url","fetch","headers","body","JSON","stringify","fetchToken","token","localStorage","getItem","types","preparerEvents","events","map","e","start","moment","toDate","end","eventAddNew","event","type","payload","eventClearActiveEvent","eventUpdated","eventDeleted","eventLoaded","checkingFinish","login","user","startLogout","dispatch","clear","logout","useForm","initialState","useState","values","setValues","reset","handleInputChange","target","name","value","Login","useDispatch","loginEmail","loginPassword","formLoginValues","handleLoginInputChange","email","password","confirm","formRegisterValues","handleRegisterInputChange","className","onSubmit","preventDefault","a","resp","json","ok","setItem","Date","getTime","uid","Swal","fire","msg","startLogin","placeholder","onChange","text","icon","showConfirmButton","timer","then","Navbar","useSelector","state","auth","onClick","messages","allDay","previous","next","today","month","week","day","agenda","date","time","noEventsInRange","showMore","total","CalendarEvent","title","uiOpenModal","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","now","minutes","seconds","add","cloneEnd","clone","initEvent","notes","CalendarModal","modalOpen","ui","activeEvent","calendar","titleValid","setTitleValid","formValues","setFormValues","useEffect","closeModal","isOpen","onRequestClose","style","closeTimeoutMS","overlayClassName","momentStart","momentEnd","isSameOrAfter","trim","length","id","console","log","getState","_id","eventStartNew","minDate","autoComplete","rows","AddNewFab","DeleteEventFab","locale","localizer","momentLocalizer","CalendarScreen","lastView","setLastView","startAccessor","endAccessor","eventPropGetter","isSelected","backgroundColor","borderRadius","opacity","display","color","onDoubleClickEvent","onSelectEvent","onView","view","onSelectSlot","selectable","components","PrivateRoutes","isAuth","Component","component","rest","props","to","PublicRoutes","AppRouter","checking","exact","rootReducer","combineReducers","action","filter","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","CalendarApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1ca0d497.chunk.js","sourcesContent":["const baseUrl = process.env.REACT_APP_API_URL;\nconst fetchNoToken = (path, data, method = 'GET') => {\n  const url = `${baseUrl}/${path}`;\n  if (method === 'GET') {\n    return fetch(url);\n  }\n\n  return fetch(url, {\n    method,\n    headers: {\n      'Content-type': 'application/json'\n    },\n    body: JSON.stringify(data)\n  })\n}\n\nconst fetchToken = (path, data, method = 'GET') => {\n  const url = `${baseUrl}/${path}`;\n  const token = localStorage.getItem('token');\n\n  if (method === 'GET') {\n    return fetch(url, {\n      headers: {\n        'x-token': token\n      }\n    });\n  }\n\n  return fetch(url, {\n    method,\n    headers: {\n      'Content-type': 'application/json',\n      'x-token': token\n    },\n    body: JSON.stringify(data)\n  })\n}\n\nexport {\n  fetchNoToken,\n  fetchToken,\n}","export const types = {\n  uiOpenModal: '[UI] Open Modal',\n  uiCloseModal: '[UI] Close Modal',\n\n  eventAddNew: '[Event] Add New',\n  eventSetActive: '[Event] Set Active',\n  eventClearActive: '[Event] Clear Active',\n  eventUpdated: '[Event] Updated',\n  eventDeleted: '[Event] Deleted',\n\n  eventLoaded: '[Event] Events Loaded',\n  eventLogout: '[Event] Event Logout',\n\n  authCheckingFinish: '[Auth] Finish Checking Login State',\n  authStartLogin: '[Auth] Start Login',\n  authLogin: '[Auth] Login',\n  authStartRegister: '[Auth] Start Register',\n  authStartTokenRenew: '[Auth] Star Token Renew',\n  authLogout: '[Auth] Logout',\n}","import moment from 'moment';\n\nexport const preparerEvents = ( events = [] ) => {\n  return events.map(\n    (e) => ({\n      ...e,\n      start: moment(e.start).toDate(),\n      end: moment(e.end).toDate()\n    })\n  )\n}","import Swal from 'sweetalert2';\nimport { fetchToken } from '../helpers/fetch';\nimport { preparerEvents } from '../helpers/preparerEvents';\nimport { types } from '../types/types';\n\nexport const eventStartNew = (event) => {\n  return async (dispatch, getState) => {\n    const { uid, name } = getState().auth;\n    try {\n      const resp = await fetchToken('events', event, 'POST');\n      const body = await resp.json();\n      if (body.ok) {\n        event.id = body.event.id;\n        event.user = {\n          _id: uid,\n          name\n        }\n        dispatch(eventAddNew(event));\n        Swal.fire('Success', 'Event Created', 'success');\n      } else {\n        Swal.fire('Error', 'Missing Params', 'error');\n      }\n    } catch (error) {\n      console.log(error);\n      Swal.fire('Error', 'Please contact admin', 'error');\n    }\n  }\n}\n\nexport const eventAddNew = (event) => ({\n  type: types.eventAddNew,\n  payload: event\n});\n\nexport const eventSetActive = (event) => ({\n  type: types.eventSetActive,\n  payload: event\n})\n\nexport const eventClearActiveEvent = () => ({\n  type: types.eventClearActive\n})\n\nexport const eventStartUpdate = (event) => {\n  return async (dispatch) => {\n    try {\n      const resp = await fetchToken(`events/${event.id}`, event, 'PUT');\n      const body = await resp.json();\n\n      if (body.ok) {\n        dispatch(eventUpdated(event));\n      } else {\n        Swal.fire('Error', body.msg, 'error');\n      }\n\n    } catch (error) {\n      console.log(error);\n    }\n  }\n}\n\nconst eventUpdated = (event) => ({\n  type: types.eventUpdated,\n  payload: event\n})\n\nexport const eventStartDeleted = () => {\n  return async (dispatch, getState) => {\n    const { activeEvent } = getState().calendar;\n    try {\n      const resp = await fetchToken(`events/${activeEvent.id}`, {}, 'DELETE');\n      const body = await resp.json();\n      if (body.ok) {\n        dispatch(eventDeleted());\n      } else {\n        Swal.fire('Error', body.msg, 'error');\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  }\n}\nconst eventDeleted = () => ({\n  type: types.eventDeleted\n})\n\nexport const eventStartLoading = () => {\n  return async (dispatch) => {\n    try {\n      const resp = await fetchToken('events');\n      const body = await resp.json();\n      const events = preparerEvents(body.events);\n      dispatch(eventLoaded(events));\n    } catch (error) {\n      console.log(error);\n    }\n  }\n}\n\nconst eventLoaded = (events) => ({\n  type: types.eventLoaded,\n  payload: events\n});\n\nexport const eventLogout = () => ({\n  type: types.eventLogout\n})","import {\n  fetchNoToken,\n  fetchToken\n} from \"../helpers/fetch\";\nimport {\n  types\n} from \"../types/types\";\nimport Swal from 'sweetalert2';\nimport { eventLogout } from \"./events\";\n\nexport const startLogin = (email, password) => {\n  return async (dispatch) => {\n    const resp = await fetchNoToken('auth', {\n      email,\n      password\n    }, 'POST');\n    const body = await resp.json();\n\n    if (body.ok) {\n      localStorage.setItem('token', body.token);\n      localStorage.setItem('token-init-date', new Date().getTime());\n      dispatch(login({\n        uid: body.uid,\n        name: body.name\n      }));\n    } else {\n      Swal.fire('Error', body.msg, 'error');\n    }\n  }\n}\n\nexport const startRegister = (values) => {\n  return async (dispatch) => {\n    const resp = await fetchNoToken('auth/register', values, 'POST');\n    const {\n      ok,\n      token,\n      msg,\n      uid,\n      name\n    } = await resp.json();\n\n    if (ok) {\n      localStorage.setItem('token', token);\n      localStorage.setItem('token-init-date', new Date().getTime());\n      Swal.fire({\n        //title: msg,\n        text: 'Register Success',\n        icon: 'success',\n        showConfirmButton: false,\n        timer: 1500\n      }).then(() => {\n        dispatch(login({\n          uid,\n          name\n        }));\n      });\n    } else {\n      Swal.fire('Error', msg, 'error');\n    }\n  }\n}\n\nexport const startChecking = () => {\n  return async (dispatch) => {\n    const resp = await fetchToken('auth/renew');\n    const body = await resp.json();\n\n    if (body.ok) {\n      localStorage.setItem('token', body.token);\n      localStorage.setItem('token-init-date', new Date().getTime());\n      dispatch(login({\n        uid: body.uid,\n        name: body.name\n      }));\n    } else {\n      dispatch(checkingFinish());\n    }\n\n  }\n}\n\nconst checkingFinish = () => ({\n  type: types.authCheckingFinish\n})\n\nconst login = (user) => ({\n  type: types.authLogin,\n  payload: user\n})\n\nexport const startLogout = () => {\n  return (dispatch) => {\n    localStorage.clear();\n    dispatch(logout());  \n    dispatch(eventLogout());\n  }\n}\n\nconst logout = () => ({\n  type: types.authLogout\n})","import { useState } from 'react';\n\nexport const useForm = (initialState = {}) => {\n    const [values, setValues] = useState(initialState);\n\n    const reset = () => {\n        setValues( initialState );\n    }\n\n    const handleInputChange = ({ target }) => {\n        \n        setValues({\n            ...values,\n            [target.name]: target.value,\n        });\n    }\n\n    return [\n        values,\n        handleInputChange,\n        reset,\n    ];\n}","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport './login.css';\nimport { useForm } from '../../hooks/useForm';\nimport { startLogin, startRegister } from '../../actions/auth';\nimport Swal from 'sweetalert2';\n\nexport const Login = () => {\n  \n  const dispatch = useDispatch();\n  const [formLoginValues, handleLoginInputChange] = useForm({\n    loginEmail: 'lola@correo.com',\n    loginPassword: '123456'\n  });\n\n  const [formRegisterValues, handleRegisterInputChange ] = useForm({\n    name: '', \n    email: '', \n    password: '',  \n    confirm: ''\n  })\n\n  const { loginEmail, loginPassword } = formLoginValues;\n  const { \n    name, \n    email, \n    password,  \n    confirm\n  } = formRegisterValues;\n\n  const handleLogin = (e) => {\n    e.preventDefault();\n    dispatch(startLogin(loginEmail, loginPassword));\n  }\n\n  const handleRegister = (e) => {\n    e.preventDefault();\n    if (password !== confirm) {\n      return Swal.fire('Error', 'Passwords are different', 'error');\n    }\n    dispatch(startRegister(formRegisterValues));\n  }\n\n  return (\n    <div className=\"container login-container\">\n      <div className=\"row\">\n        <div className=\"col-md-6 login-form-1\">\n          <h3>Login</h3>\n          <form onSubmit={handleLogin}>\n            <div className=\"form-group\">\n              <input\n                name=\"loginEmail\"\n                type=\"text\"\n                className=\"form-control\"\n                placeholder=\"Email\"\n                value={loginEmail}\n                onChange={handleLoginInputChange}\n              />\n            </div>\n            <div className=\"form-group\">\n              <input\n                name=\"loginPassword\"\n                type=\"password\"\n                className=\"form-control\"\n                placeholder=\"Password\"\n                value={loginPassword}\n                onChange={handleLoginInputChange}\n              />\n            </div>\n            <div className=\"form-group\">\n              <input\n                type=\"submit\"\n                className=\"btnSubmit\"\n                value=\"Login\"\n              />\n            </div>\n          </form>\n        </div>\n\n        <div className=\"col-md-6 login-form-2\">\n          <h3>Registro</h3>\n          <form onSubmit={handleRegister}>\n            <div className=\"form-group\">\n              <input\n                name=\"name\"\n                type=\"text\"\n                className=\"form-control\"\n                placeholder=\"Name\"\n                value={name}\n                onChange={handleRegisterInputChange}\n              />\n            </div>\n            <div className=\"form-group\">\n              <input\n                name=\"email\"\n                type=\"email\"\n                className=\"form-control\"\n                placeholder=\"Email\"\n                value={email}\n                onChange={handleRegisterInputChange}\n              />\n            </div>\n            <div className=\"form-group\">\n              <input\n                name=\"password\"\n                type=\"password\"\n                className=\"form-control\"\n                placeholder=\"Password\"\n                value={password}\n                onChange={handleRegisterInputChange}\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <input\n                name=\"confirm\"\n                type=\"password\"\n                className=\"form-control\"\n                placeholder=\"Confirm password\"\n                value={confirm}\n                onChange={handleRegisterInputChange}\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <input\n                type=\"submit\"\n                className=\"btnSubmit\"\n                value=\"Register\" />\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  )\n}","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { startLogout } from '../../actions/auth';\n\nexport const Navbar = () => {\n  const dispatch = useDispatch();\n  const { name } = useSelector(state => state.auth);\n  \n  return (\n    <div className=\"navbar navbar-dark bg-dark mb-4\">\n      <span className=\"navbar-brand\">\n        {name}\n      </span>\n      <button \n        className=\"btn btn-outline-danger\"\n        onClick={() => dispatch(startLogout())}\n      >\n        <i className=\"fas fa-sign-out-alt\"></i>\n        <span> Exit</span>\n      </button>\n    </div>\n  )\n}\n","export const messages = {\n  allDay: 'Todo el día',\n  previous: '<',\n  next: '>',\n  today: 'Hoy',\n  month: 'Mes',\n  week: 'Semana',\n  day: 'Día',\n  agenda: 'Agenda',\n  date: 'Fecha',\n  time: 'Hora',\n  event: 'Evento',\n  noEventsInRange: 'No hay eventos en este rango',\n  showMore: total => `+ Ver más (${total})`\n};","import React from 'react'\n\nexport const CalendarEvent = ({ event }) => {\n  const { title, user } = event\n  return (\n    <div>\n      <strong>{title}</strong>\n      <span> - {user?.name}</span>\n    </div>\n  )\n}\n","import { types } from \"../types/types\";\n\nexport const uiOpenModal = () => ({\n  type: types.uiOpenModal\n})\n\nexport const uiCloseModal = () => ({\n  type: types.uiCloseModal\n})","import React, { useState, useEffect } from 'react';\nimport moment from 'moment';\nimport Swal from 'sweetalert2';\nimport DateTimePicker from 'react-datetime-picker';\nimport Modal from 'react-modal';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { uiCloseModal } from '../../actions/ui';\nimport { \n  eventClearActiveEvent, \n  eventStartNew, \n  eventStartUpdate, \n} from '../../actions/events';\n\nconst customStyles = {\n  content: {\n    top: '50%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    marginRight: '-50%',\n    transform: 'translate(-50%, -50%)',\n  },\n};\nModal.setAppElement('#root');\nconst now = moment().minutes(0).seconds(0).add(1, 'hours');\nconst cloneEnd = now.clone().add(1, 'hour');\nconst initEvent = {\n  title: '',\n  notes: '',\n  start: now.toDate(),\n  end: cloneEnd.toDate()\n}\n\nexport const CalendarModal = () => {\n  const dispatch = useDispatch();\n  const {\n    ui: { modalOpen },\n    calendar: { activeEvent },\n  } = useSelector(state => state);\n\n  const [titleValid, setTitleValid] = useState(true)\n  const [formValues, setFormValues] = useState(initEvent);\n\n  const { title, notes, start, end } = formValues;\n\n  useEffect(() => {\n    if (activeEvent) {\n      setFormValues(activeEvent);\n    } else {\n      setFormValues(initEvent);\n    }\n  }, [activeEvent])\n\n  const closeModal = () => {\n    dispatch(uiCloseModal());\n    dispatch(eventClearActiveEvent());\n    setFormValues(initEvent);\n  }\n\n  const handleStartDateChange = (e) => {\n    setFormValues({\n      ...formValues,\n      start: e\n    })\n  }\n\n  const handleEndDateChange = (e) => {\n    setFormValues({\n      ...formValues,\n      end: e\n    })\n  }\n\n  const handleInputChange = ({ target }) => {\n    setFormValues({\n      ...formValues,\n      [target.name]: target.value\n    })\n  }\n\n  const handleSubmitForm = (e) => {\n    e.preventDefault();\n    const momentStart = moment(start);\n    const momentEnd = moment(end);\n\n    if (momentStart.isSameOrAfter(momentEnd)) {\n      return Swal.fire({\n        title: 'Error',\n        text: 'End date should be grater',\n        icon: 'error'\n      });\n    }\n\n    if (title.trim().length < 2) {\n      setTitleValid(false)\n    }\n\n    if (!!activeEvent) {\n      dispatch(eventStartUpdate(formValues));\n    } else {\n      dispatch(eventStartNew(formValues));\n    }\n\n    setTitleValid(true);\n    closeModal();\n  }\n\n  return (\n    <Modal\n      isOpen={modalOpen}\n      // onAfterOpen={afterOpenModal}\n      onRequestClose={closeModal}\n      style={customStyles}\n      closeTimeoutMS={200}\n      className=\"modal\"\n      overlayClassName=\"modal-fondo\"\n    >\n      <h1> {(activeEvent) ? 'Editar Evento' : 'Nuevo Evento'} </h1>\n      <hr />\n      <form className=\"container\" onSubmit={handleSubmitForm}>\n\n        <div className=\"form-group\">\n          <label>Fecha y hora inicio</label>\n          <DateTimePicker\n            onChange={handleStartDateChange}\n            value={start}\n            className=\"form-control\"\n          />\n        </div>\n\n        <div className=\"form-group\">\n          <label>Fecha y hora fin</label>\n          <DateTimePicker\n            onChange={handleEndDateChange}\n            value={end}\n            minDate={start}\n            className=\"form-control\"\n          />\n        </div>\n\n        <hr />\n        <div className=\"form-group\">\n          <label>Titulo y notas</label>\n          <input\n            type=\"text\"\n            className={`form-control ${!titleValid && 'is-invalid'}`}\n            placeholder=\"Título del evento\"\n            name=\"title\"\n            autoComplete=\"off\"\n            value={title}\n            onChange={handleInputChange}\n          />\n          <small id=\"emailHelp\" className=\"form-text text-muted\">Una descripción corta</small>\n        </div>\n\n        <div className=\"form-group\">\n          <textarea\n            type=\"text\"\n            className=\"form-control\"\n            placeholder=\"Notas\"\n            rows=\"5\"\n            name=\"notes\"\n            value={notes}\n            onChange={handleInputChange}\n          ></textarea>\n          <small id=\"emailHelp\" className=\"form-text text-muted\">Información adicional</small>\n        </div>\n\n        <button\n          type=\"submit\"\n          className=\"btn btn-outline-primary btn-block\"\n        >\n          <i className=\"far fa-save\"></i>\n          <span> Guardar</span>\n        </button>\n\n      </form>\n    </Modal>\n  )\n}\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { uiOpenModal } from '../../actions/ui';\n\nexport const AddNewFab = () => {\n\n  const dispatch = useDispatch();\n\n  return (\n    <button\n      className=\"btn btn-primary fab\"\n      onClick={() => dispatch(uiOpenModal())}\n    >\n      <i className=\"fas fa-plus \"></i>\n    </button>\n  )\n}\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { eventStartDeleted } from '../../actions/events';\n\nexport const DeleteEventFab = () => {\n  const dispatch = useDispatch();\n\n  const handleDelete = () => {\n    dispatch(eventStartDeleted());\n  }\n\n  return (\n    <button\n      className=\"btn btn-danger fab-danger\"\n      onClick={handleDelete}\n    >\n      <i className=\"fas fa-trash\"></i>\n      <span> Delete Event</span>\n    </button>\n  )\n}\n","import React, { useEffect, useState } from 'react';\nimport moment from 'moment';\nimport {\n  Calendar,\n  momentLocalizer\n} from 'react-big-calendar';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Navbar } from '../ui/Navbar';\nimport { messages } from '../../helpers/calendar-messages';\nimport { CalendarEvent } from './CalendarEvent';\nimport { CalendarModal } from './CalendarModal';\nimport { uiOpenModal } from '../../actions/ui';\n\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\nimport 'moment/locale/es';\nimport { eventClearActiveEvent, eventSetActive, eventStartLoading } from '../../actions/events';\nimport { AddNewFab } from '../ui/AddNewFab';\nimport { DeleteEventFab } from '../ui/DeleteEventFab';\nmoment.locale('es');\nconst localizer = momentLocalizer(moment) // or globalizeLocalizer\n\nexport const CalendarScreen = () => {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(eventStartLoading());\n  }, [dispatch])\n\n  const { \n    calendar: { events, activeEvent },\n    auth: { uid },\n  } = useSelector(state => state);\n  const [lastView, setLastView] = useState(localStorage.getItem('lastView') || 'month');\n\n  const eventStyleGetter = (event, start, end, isSelected) => {\n    const { user: { _id: id } } = event; \n    \n    const style = {\n      backgroundColor: (uid === id) ? '#367CF7' : '#465660',\n      borderRadius: '0px',\n      opacity: '0.8',\n      display: 'block',\n      color: 'white'\n    }\n    return {\n      style\n    }\n  }\n\n  const onDoubleClick = (e) => {\n    dispatch(uiOpenModal());\n  }\n\n  const onSelectEvent = (e) => {\n    dispatch(eventSetActive(e));\n  }\n\n  const onViewChange = (e) => {\n    setLastView(e);\n    localStorage.setItem('lastView', e);\n  }\n\n  const onSelectSlot = (e) => {\n    dispatch(eventClearActiveEvent());\n  }\n\n  return (\n    <div>\n      <Navbar />\n      <Calendar\n        localizer={localizer}\n        events={events}\n        startAccessor=\"start\"\n        endAccessor=\"end\"\n        messages={messages}\n        eventPropGetter={eventStyleGetter}\n        onDoubleClickEvent={onDoubleClick}\n        onSelectEvent={onSelectEvent}\n        onView={onViewChange}\n        view={lastView}\n        onSelectSlot={onSelectSlot}\n        selectable={true}\n        components={{\n          event: CalendarEvent\n        }}\n      />\n      {activeEvent && (<DeleteEventFab />)}\n      <AddNewFab />\n      <CalendarModal />\n    </div>\n  )\n}\n","import { Route, Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nexport const PrivateRoutes = ({ isAuth, component: Component, ...rest }) => {\n  return (\n    <Route \n      {...rest}\n      component={(props) => \n        isAuth ? <Component {...props} /> : <Redirect to=\"/login\" />\n      }\n    />\n  )\n}\n\n\nPrivateRoutes.propTypes = {\n  isAuth: PropTypes.bool.isRequired,\n  component: PropTypes.func.isRequired\n}","import { Route, Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nexport const PublicRoutes = ({ isAuth, component: Component, ...rest }) => {\n  return (\n    <Route \n      {...rest}\n      component={(props) => \n        !isAuth ? <Component {...props} /> : <Redirect to=\"/\" />\n      }\n    />\n  )\n}\n\n\nPublicRoutes.propTypes = {\n  isAuth: PropTypes.bool.isRequired,\n  component: PropTypes.func.isRequired,\n}","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Redirect,\n} from 'react-router-dom';\nimport { startChecking } from '../actions/auth';\nimport { Login } from '../components/auth/Login';\nimport { CalendarScreen } from '../components/calendar/CalendarScreen';\nimport { PrivateRoutes } from './PrivateRoutes';\nimport { PublicRoutes } from './PublicRoutes';\n\n\nexport const AppRouter = () => {\n  \n  const dispatch = useDispatch();\n  const { uid, checking } = useSelector(state => state.auth);\n  \n  useEffect(() => {\n    dispatch(startChecking());\n  }, [dispatch])\n\n  if (checking) {\n    return (<h5>Wait...</h5>)\n  }\n\n  return (\n    <Router>\n      <div>\n        <Switch>\n          <PublicRoutes\n            isAuth={!!uid} \n            path='/login'\n            component={Login}\n          />\n          <PrivateRoutes\n            isAuth={!!uid} \n            exact\n            path=\"/\"\n            component={CalendarScreen}\n          />\n\n          <Redirect \n            to=\"/login\"\n          />\n          {/* <Route\n            exact\n            path=\"/login\"\n            component={Login}\n          />\n          <Route\n            exact\n            path=\"/\"\n            component={CalendarScreen}\n          /> */}\n        </Switch>\n      </div>\n    </Router>\n  )\n}\n","import { types } from \"../types/types\";\n\nconst initialState = {\n  checking: true,\n  //uid: null,\n  //name: null\n}\n\nexport const authReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case types.authLogin: \n      return {\n        ...state,\n        ...action.payload,\n        checking: false,\n      }\n    case types.authCheckingFinish:\n      return {\n        ...state,\n        checking: false\n      }\n    case types.authLogout: \n      return {\n        checking: false\n      }\n    default:\n      return state;\n  }\n}","import { types } from \"../types/types\";\n\nconst initialState = {\n  events: [],\n  activeEvent: null,\n}\n\nexport const calendarReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case types.eventSetActive:\n      return {\n        ...state,\n        activeEvent: action.payload\n      }\n    case types.eventAddNew:\n      return {\n        ...state,\n        events: [...state.events, action.payload]\n      }\n    case types.eventClearActive:\n      return {\n        ...state,\n        activeEvent: null\n      }\n    case types.eventLoaded: \n      return {\n        ...state,\n        events: action.payload\n      }\n    case types.eventUpdated:\n      return {\n        ...state,\n        events: state.events.map(\n          (event) => (event.id !== action.payload.id) ? event : action.payload\n        )\n      }\n    case types.eventDeleted:\n      return {\n        ...state,\n        events: state.events.filter((event) => event.id !== state.activeEvent.id),\n        activeEvent: null,\n      }\n    case types.eventLogout: \n      return {\n        ...initialState\n      }\n    default:\n      return state;\n  }\n}","import { types } from \"../types/types\";\n\nconst initialState = {\n  modalOpen: false,\n\n}\n\nexport const uiReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case types.uiOpenModal:\n      return {\n        ...state,\n        modalOpen: true\n      }\n    case types.uiCloseModal:\n      return {\n        ...state,\n        modalOpen: false\n      }\n    default:\n      return state;\n  }\n}","import { combineReducers } from \"redux\";\nimport { authReducer } from \"./authReducer\";\nimport { calendarReducer } from \"./calendarReducer\";\nimport { uiReducer } from \"./uiReducer\";\n\n\nexport const rootReducer = combineReducers({\n  auth: authReducer,\n  calendar: calendarReducer,\n  ui: uiReducer,\n})","import {\n  createStore,\n  applyMiddleware,\n  compose\n} from 'redux';\nimport thunk from 'redux-thunk';\nimport { rootReducer } from '../reducers/rootReducers';\n\nconst composeEnhancers = (\n  typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n) || compose;\n\nexport const store = createStore(\n  rootReducer,\n  composeEnhancers(\n    applyMiddleware(thunk)\n  )\n)","import React from 'react';\nimport { Provider } from 'react-redux';\nimport { AppRouter } from './routers/AppRouter';\nimport { store } from './store/store';\n\nexport const CalendarApp = () => {\n  return (\n    <Provider store={store}>\n      <AppRouter />\n    </Provider>\n  )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CalendarApp } from './CalendarApp';\nimport './styles.css';\nReactDOM.render(\n  <CalendarApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}